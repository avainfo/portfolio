@import "../../variables";

$cardRatio: calc(668 / 383);
$cardWidth: calc($w / 4);
$cardHeight: calc($cardWidth / $cardRatio);

.card {
	position: absolute;
	top: calc(100vh / 2 - ($cardHeight / 2));
	right: calc($w / 10);
	width: $cardWidth;
	height: $cardHeight;
	perspective: 1000px;
	z-index: 2;
	cursor: pointer;

	> .inner {
		width: 100%;
		height: 100%;
		transform-style: preserve-3d;
		position: relative;
		animation: flip-scale-down-ver 0.3s ease-in-out both;
		animation-fill-mode: forwards;
	}

	&:hover .inner {
		animation: flip-scale-up-ver 0.3s ease-in-out both;
	}

	.front, .back {
		position: absolute;
		width: 100%;
		height: 100%;
		backface-visibility: hidden;
		overflow-x: auto;
	}

	.front {
		z-index: 2;
		display: flex;
		align-items: center;
		justify-content: center;

		> img {
			width: 100%;
		}
	}

	.back {
		transform: rotateX(180deg);
		z-index: 1;
		display: flex;
		align-items: center;
		justify-content: center;

		> img {
			width: 100%;
		}
	}
}

@keyframes flip-scale-up-ver {
	0% {
		transform: scale(1) rotateX(0);
	}
	50% {
		transform: scale(1.2) rotateX(-90deg);
	}
	100% {
		transform: scale(1.4) rotateX(-180deg);
	}
}

@keyframes flip-scale-down-ver {
	0% {
		transform: scale(1.4) rotateX(-180deg);
	}
	50% {
		transform: scale(1.2) rotateX(-90deg);
	}
	100% {
		transform: scale(1) rotateX(0deg);
	}
}

@media (max-width: 1000px) {
	.card {
		$cardWidth: calc($w / 2);
		$cardHeight: calc($cardWidth / $cardRatio);
		top: calc(160vh / 2 - ($cardHeight / 2));
		right: calc($w / 2 - ($cardWidth / 2));
		width: $cardWidth;
		height: $cardHeight;
	}
}